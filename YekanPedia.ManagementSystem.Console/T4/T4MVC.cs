// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static YekanPedia.ManagementSystem.Console.Controllers.AboutUsController AboutUs = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_AboutUsController();
    public static YekanPedia.ManagementSystem.Console.Controllers.AccountController Account = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_AccountController();
    public static YekanPedia.ManagementSystem.Console.Controllers.ClassController Class = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_ClassController();
    public static YekanPedia.ManagementSystem.Console.Controllers.ClassTypeController ClassType = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_ClassTypeController();
    public static YekanPedia.ManagementSystem.Console.Controllers.CourseController Course = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_CourseController();
    public static YekanPedia.ManagementSystem.Console.Controllers.DashboardController Dashboard = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_DashboardController();
    public static YekanPedia.ManagementSystem.Console.Controllers.ErrorController Error = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_ErrorController();
    public static YekanPedia.ManagementSystem.Console.Controllers.FeedbackController Feedback = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_FeedbackController();
    public static YekanPedia.ManagementSystem.Console.Controllers.GeographicController Geographic = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_GeographicController();
    public static YekanPedia.ManagementSystem.Console.Controllers.NotificationController Notification = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_NotificationController();
    public static YekanPedia.ManagementSystem.Console.Controllers.NotificationSettingController NotificationSetting = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_NotificationSettingController();
    public static YekanPedia.ManagementSystem.Console.Controllers.OAuthController OAuth = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_OAuthController();
    public static YekanPedia.ManagementSystem.Console.Controllers.SchedulerController Scheduler = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_SchedulerController();
    public static YekanPedia.ManagementSystem.Console.Controllers.SessionController Session = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_SessionController();
    public static YekanPedia.ManagementSystem.Console.Controllers.SessionRequestController SessionRequest = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_SessionRequestController();
    public static YekanPedia.ManagementSystem.Console.Controllers.SettingController Setting = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_SettingController();
    public static YekanPedia.ManagementSystem.Console.Controllers.TaskController Task = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_TaskController();
    public static YekanPedia.ManagementSystem.Console.Controllers.UserController User = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_UserController();
    public static YekanPedia.ManagementSystem.Console.Controllers.UserInClassController UserInClass = new YekanPedia.ManagementSystem.Console.Controllers.T4MVC_UserInClassController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_PartialViewResult : System.Web.Mvc.PartialViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_PartialViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ViewResult : System.Web.Mvc.ViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ContentResult : System.Web.Mvc.ContentResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ContentResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_RedirectToRouteResult : System.Web.Mvc.RedirectToRouteResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_RedirectToRouteResult(string area, string controller, string action, string protocol = null): base(default(System.Web.Routing.RouteValueDictionary))
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Application {
            private const string URLPATH = "~/Scripts/Application";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string AboutUsController_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AboutUsController.min.js") ? Url("AboutUsController.min.js") : Url("AboutUsController.js");
            public static readonly string AboutUsController_min_js = Url("AboutUsController.min.js");
            public static readonly string SettingController___Copy_min_js = Url("SettingController - Copy.min.js");
            public static readonly string AccountController_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AccountController.min.js") ? Url("AccountController.min.js") : Url("AccountController.js");
            public static readonly string AccountController_min_js = Url("AccountController.min.js");
            public static readonly string BasicInfoController_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/BasicInfoController.min.js") ? Url("BasicInfoController.min.js") : Url("BasicInfoController.js");
            public static readonly string BasicInfoController_min_js = Url("BasicInfoController.min.js");
            public static readonly string ChartController_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ChartController.min.js") ? Url("ChartController.min.js") : Url("ChartController.js");
            public static readonly string ChartController_min_js = Url("ChartController.min.js");
            public static readonly string ClassController_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ClassController.min.js") ? Url("ClassController.min.js") : Url("ClassController.js");
            public static readonly string ClassController_min_js = Url("ClassController.min.js");
            public static readonly string NotificationSettingController_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/NotificationSettingController.min.js") ? Url("NotificationSettingController.min.js") : Url("NotificationSettingController.js");
            public static readonly string NotificationSettingController_min_js = Url("NotificationSettingController.min.js");
            public static readonly string OAuthController_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/OAuthController.min.js") ? Url("OAuthController.min.js") : Url("OAuthController.js");
            public static readonly string OAuthController_min_js = Url("OAuthController.min.js");
            public static readonly string SchedulerController_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SchedulerController.min.js") ? Url("SchedulerController.min.js") : Url("SchedulerController.js");
            public static readonly string SchedulerController_min_js = Url("SchedulerController.min.js");
            public static readonly string SessionController_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SessionController.min.js") ? Url("SessionController.min.js") : Url("SessionController.js");
            public static readonly string SessionController_min_js = Url("SessionController.min.js");
            public static readonly string SessionRequestController_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SessionRequestController.min.js") ? Url("SessionRequestController.min.js") : Url("SessionRequestController.js");
            public static readonly string SessionRequestController_min_js = Url("SessionRequestController.min.js");
            public static readonly string SettingController_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/SettingController.min.js") ? Url("SettingController.min.js") : Url("SettingController.js");
            public static readonly string SettingController_min_js = Url("SettingController.min.js");
            public static readonly string TaskController_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/TaskController.min.js") ? Url("TaskController.min.js") : Url("TaskController.js");
            public static readonly string TaskController_min_js = Url("TaskController.min.js");
            public static readonly string UserController_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/UserController.min.js") ? Url("UserController.min.js") : Url("UserController.js");
            public static readonly string UserController_min_js = Url("UserController.min.js");
            public static readonly string UserInClassController_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/UserInClassController.min.js") ? Url("UserInClassController.min.js") : Url("UserInClassController.js");
            public static readonly string UserInClassController_min_js = Url("UserInClassController.min.js");
        }
    
        public static readonly string functions_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/functions.min.js") ? Url("functions.min.js") : Url("functions.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class JQuery {
            private const string URLPATH = "~/Scripts/JQuery";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Ajax {
                private const string URLPATH = "~/Scripts/JQuery/Ajax";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class BootGrid {
                private const string URLPATH = "~/Scripts/JQuery/BootGrid";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_bootgrid_min_js = Url("jquery.bootgrid.min.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Bootstrap {
                private const string URLPATH = "~/Scripts/JQuery/Bootstrap";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
                public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Feedback {
                private const string URLPATH = "~/Scripts/JQuery/Feedback";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string feedback_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/feedback.min.js") ? Url("feedback.min.js") : Url("feedback.js");
                public static readonly string feedback_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/feedback.min.js") ? Url("feedback.min.js") : Url("feedback.js");
                public static readonly string html2canvas_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/html2canvas.min.js") ? Url("html2canvas.min.js") : Url("html2canvas.js");
                public static readonly string Html2Convas_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Html2Convas.min.js") ? Url("Html2Convas.min.js") : Url("Html2Convas.js");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class templates {
                    private const string URLPATH = "~/Scripts/JQuery/Feedback/templates";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class fa_Ir {
                        private const string URLPATH = "~/Scripts/JQuery/Feedback/templates/fa-Ir";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string template_html = Url("template.html");
                    }
                
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class FullCalendar {
                private const string URLPATH = "~/Scripts/JQuery/FullCalendar";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                public static readonly string fullcalendar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fullcalendar.min.js") ? Url("fullcalendar.min.js") : Url("fullcalendar.js");
                public static readonly string fullcalendar_min_js = Url("fullcalendar.min.js");
                public static readonly string moment_min_js = Url("moment.min.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class InputMask {
                private const string URLPATH = "~/Scripts/JQuery/InputMask";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string input_mask_min_js = Url("input-mask.min.js");
            }
        
            public static readonly string jquery_1_10_2_min_js = Url("jquery-1.10.2.min.js");
            public static readonly string jquery_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.d.min.js") ? Url("jquery.d.min.js") : Url("jquery.d.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class LightGallery {
                private const string URLPATH = "~/Scripts/JQuery/LightGallery";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string lightGallery_min_js = Url("lightGallery.min.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Loadingbar {
                private const string URLPATH = "~/Scripts/JQuery/Loadingbar";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Loadingbar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Loadingbar.min.js") ? Url("Loadingbar.min.js") : Url("Loadingbar.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Maps {
                private const string URLPATH = "~/Scripts/JQuery/Maps";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class _1_0_0_51205 {
                    private const string URLPATH = "~/Scripts/JQuery/Maps/1.0.0.51205";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string gsa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gsa.min.js") ? Url("gsa.min.js") : Url("gsa.js");
                    public static readonly string gsa_min_js = Url("gsa.min.js");
                }
            
                public static readonly string google_maps_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/google.maps.d.min.js") ? Url("google.maps.d.min.js") : Url("google.maps.d.js");
                public static readonly string gsa_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gsa.min.js") ? Url("gsa.min.js") : Url("gsa.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class NiceScroll {
                private const string URLPATH = "~/Scripts/JQuery/NiceScroll";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_nicescroll_min_js = Url("jquery.nicescroll.min.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class NProgressbar {
                private const string URLPATH = "~/Scripts/JQuery/NProgressbar";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string nprogress_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nprogress.min.js") ? Url("nprogress.min.js") : Url("nprogress.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class PasswordStrongly {
                private const string URLPATH = "~/Scripts/JQuery/PasswordStrongly";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string PasswordStrongly_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PasswordStrongly.min.js") ? Url("PasswordStrongly.min.js") : Url("PasswordStrongly.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class PersianCalendar {
                private const string URLPATH = "~/Scripts/JQuery/PersianCalendar";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string PersianCalendar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PersianCalendar.min.js") ? Url("PersianCalendar.min.js") : Url("PersianCalendar.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Phoenix {
                private const string URLPATH = "~/Scripts/JQuery/Phoenix";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Phoenix_core_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Phoenix.core.min.js") ? Url("Phoenix.core.min.js") : Url("Phoenix.core.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Select {
                private const string URLPATH = "~/Scripts/JQuery/Select";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string BootstrapSelect_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/BootstrapSelect.min.js") ? Url("BootstrapSelect.min.js") : Url("BootstrapSelect.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class SparkLine {
                private const string URLPATH = "~/Scripts/JQuery/SparkLine";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_sparkline_min_js = Url("jquery.sparkline.min.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Sweet {
                private const string URLPATH = "~/Scripts/JQuery/Sweet";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string sweet_alert_min_js = Url("sweet-alert.min.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Type {
                private const string URLPATH = "~/Scripts/JQuery/Type";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jQuery_Type_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jQuery.Type.min.js") ? Url("jQuery.Type.min.js") : Url("jQuery.Type.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Validation {
                private const string URLPATH = "~/Scripts/JQuery/Validation";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
                public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
                public static readonly string jquery_validation_messages_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validation.messages.min.js") ? Url("jquery.validation.messages.min.js") : Url("jquery.validation.messages.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Wave {
                private const string URLPATH = "~/Scripts/JQuery/Wave";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string waves_min_js = Url("waves.min.js");
            }
        
        }
    
        public static readonly string jquery_signalR_2_1_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.signalR-2.1.2.min.js") ? Url("jquery.signalR-2.1.2.min.js") : Url("jquery.signalR-2.1.2.js");
        public static readonly string jquery_signalR_2_1_2_min_js = Url("jquery.signalR-2.1.2.min.js");
        public static readonly string jquery_signalR_2_2_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.signalR-2.2.0.min.js") ? Url("jquery.signalR-2.2.0.min.js") : Url("jquery.signalR-2.2.0.js");
        public static readonly string jquery_signalR_2_2_0_min_js = Url("jquery.signalR-2.2.0.min.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Images {
            private const string URLPATH = "~/Content/Images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Avatar {
                private const string URLPATH = "~/Content/Images/Avatar";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _1_png = Url("1.png");
                public static readonly string _10_png = Url("10.png");
                public static readonly string _11_png = Url("11.png");
                public static readonly string _2_png = Url("2.png");
                public static readonly string _3_png = Url("3.png");
                public static readonly string _4_png = Url("4.png");
                public static readonly string _5_png = Url("5.png");
                public static readonly string _6_png = Url("6.png");
                public static readonly string _7_png = Url("7.png");
                public static readonly string _8_png = Url("8.png");
                public static readonly string _9_png = Url("9.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Background {
                private const string URLPATH = "~/Content/Images/Background";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string profile_menu_jpg = Url("profile-menu.jpg");
                public static readonly string profile_widget_jpg = Url("profile-widget.jpg");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Course {
                private const string URLPATH = "~/Content/Images/Course";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class LogoTypes {
                    private const string URLPATH = "~/Content/Images/Course/LogoTypes";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string Gre_png = Url("Gre.png");
                    public static readonly string IELTS_jpg = Url("IELTS.jpg");
                    public static readonly string Movie_jpg = Url("Movie.jpg");
                    public static readonly string Movie_png = Url("Movie.png");
                    public static readonly string Music_png = Url("Music.png");
                    public static readonly string PreUniLevel_jpg = Url("PreUniLevel.jpg");
                    public static readonly string PreUniLevel_png = Url("PreUniLevel.png");
                    public static readonly string toefl_jpg = Url("toefl.jpg");
                    public static readonly string TTC_png = Url("TTC.png");
                    public static readonly string UniLevel_jpg = Url("UniLevel.jpg");
                    public static readonly string UniLevel_png = Url("UniLevel.png");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class FileType {
                private const string URLPATH = "~/Content/Images/FileType";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string archive_png = Url("archive.png");
                public static readonly string music_png = Url("music.png");
                public static readonly string pdf_png = Url("pdf.png");
                public static readonly string png_png = Url("png.png");
                public static readonly string ppt_png = Url("ppt.png");
                public static readonly string video_png = Url("video.png");
                public static readonly string word_png = Url("word.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Icon {
                private const string URLPATH = "~/Content/Images/Icon";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string notifications_png = Url("notifications.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Logo {
                private const string URLPATH = "~/Content/Images/Logo";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string log100_png = Url("log100.png");
                public static readonly string log128_png = Url("log128.png");
                public static readonly string log256_png = Url("log256.png");
                public static readonly string log32_png = Url("log32.png");
                public static readonly string log48_png = Url("log48.png");
                public static readonly string log512_png = Url("log512.png");
                public static readonly string log64_png = Url("log64.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Map {
                private const string URLPATH = "~/Content/Images/Map";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string MyLocationMarkerIcon_png = Url("MyLocationMarkerIcon.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Menu {
                private const string URLPATH = "~/Content/Images/Menu";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ellipsis_png = Url("ellipsis.png");
                public static readonly string ellipsis_2x_png = Url("ellipsis@2x.png");
                public static readonly string menu_2_rtl_png = Url("menu-2-rtl.png");
                public static readonly string menu_2_png = Url("menu-2.png");
                public static readonly string menu_2_2x_rtl_png = Url("menu-2@2x-rtl.png");
                public static readonly string menu_2_2x_png = Url("menu-2@2x.png");
                public static readonly string message_png = Url("message.png");
                public static readonly string message_2x_png = Url("message@2x.png");
                public static readonly string notification_png = Url("notification.png");
                public static readonly string notification_2x_png = Url("notification@2x.png");
                public static readonly string search_png = Url("search.png");
                public static readonly string search_2x_png = Url("search@2x.png");
                public static readonly string task_png = Url("task.png");
                public static readonly string task_2x_png = Url("task@2x.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Other {
                private const string URLPATH = "~/Content/Images/Other";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Select_png = Url("Select.png");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Styles {
            private const string URLPATH = "~/Content/Styles";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Ltr {
                private const string URLPATH = "~/Content/Styles/Ltr";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string AppStyle1_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AppStyle1.min.css") ? Url("AppStyle1.min.css") : Url("AppStyle1.css");
                public static readonly string AppStyle2_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AppStyle2.min.css") ? Url("AppStyle2.min.css") : Url("AppStyle2.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Public {
                private const string URLPATH = "~/Content/Styles/Public";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Animate_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Animate.min.css") ? Url("Animate.min.css") : Url("Animate.css");
                public static readonly string Bootgrid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Bootgrid.min.css") ? Url("Bootgrid.min.css") : Url("Bootgrid.css");
                public static readonly string BootstrapSelect_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/BootstrapSelect.min.css") ? Url("BootstrapSelect.min.css") : Url("BootstrapSelect.css");
                public static readonly string Feedback_rtl_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Feedback.rtl.min.css") ? Url("Feedback.rtl.min.css") : Url("Feedback.rtl.css");
                public static readonly string Feedback_rtl_min_css = Url("Feedback.rtl.min.css");
                public static readonly string Fullcalendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Fullcalendar.min.css") ? Url("Fullcalendar.min.css") : Url("Fullcalendar.css");
                public static readonly string LightGallery_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/LightGallery.min.css") ? Url("LightGallery.min.css") : Url("LightGallery.css");
                public static readonly string LoadingBar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/LoadingBar.min.css") ? Url("LoadingBar.min.css") : Url("LoadingBar.css");
                public static readonly string MapStyle_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MapStyle.min.css") ? Url("MapStyle.min.css") : Url("MapStyle.css");
                public static readonly string MaterialDesignIconicFont_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MaterialDesignIconicFont.min.css") ? Url("MaterialDesignIconicFont.min.css") : Url("MaterialDesignIconicFont.css");
                public static readonly string NProgress_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/NProgress.min.css") ? Url("NProgress.min.css") : Url("NProgress.css");
                public static readonly string PersianCalendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/PersianCalendar.min.css") ? Url("PersianCalendar.min.css") : Url("PersianCalendar.css");
                public static readonly string Sweet_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Sweet.min.css") ? Url("Sweet.min.css") : Url("Sweet.css");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Rtl {
                private const string URLPATH = "~/Content/Styles/Rtl";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string AppStyle1_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AppStyle1.min.css") ? Url("AppStyle1.min.css") : Url("AppStyle1.css");
            }
        
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class Application 
            {
                public static class Assets
                {
                    public const string AboutUsController_js = "~/Scripts/Application/AboutUsController.js"; 
                    public const string AccountController_js = "~/Scripts/Application/AccountController.js"; 
                    public const string BasicInfoController_js = "~/Scripts/Application/BasicInfoController.js"; 
                    public const string ChartController_js = "~/Scripts/Application/ChartController.js"; 
                    public const string ClassController_js = "~/Scripts/Application/ClassController.js"; 
                    public const string NotificationSettingController_js = "~/Scripts/Application/NotificationSettingController.js"; 
                    public const string OAuthController_js = "~/Scripts/Application/OAuthController.js"; 
                    public const string SchedulerController_js = "~/Scripts/Application/SchedulerController.js"; 
                    public const string SessionController_js = "~/Scripts/Application/SessionController.js"; 
                    public const string SessionRequestController_js = "~/Scripts/Application/SessionRequestController.js"; 
                    public const string SettingController_js = "~/Scripts/Application/SettingController.js"; 
                    public const string TaskController_js = "~/Scripts/Application/TaskController.js"; 
                    public const string UserController_js = "~/Scripts/Application/UserController.js"; 
                    public const string UserInClassController_js = "~/Scripts/Application/UserInClassController.js"; 
                }
            }
            public static partial class JQuery 
            {
                public static partial class Ajax 
                {
                    public static class Assets
                    {
                        public const string jquery_unobtrusive_ajax_js = "~/Scripts/JQuery/Ajax/jquery.unobtrusive-ajax.js"; 
                    }
                }
                public static partial class BootGrid 
                {
                    public static class Assets
                    {
                        public const string jquery_bootgrid_min_js = "~/Scripts/JQuery/BootGrid/jquery.bootgrid.min.js"; 
                    }
                }
                public static partial class Bootstrap 
                {
                    public static class Assets
                    {
                        public const string bootstrap_js = "~/Scripts/JQuery/Bootstrap/bootstrap.js"; 
                    }
                }
                public static partial class Feedback 
                {
                    public static partial class templates 
                    {
                        public static partial class fa_Ir 
                        {
                            public static class Assets
                            {
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                        public const string feedback_js = "~/Scripts/JQuery/Feedback/feedback.js"; 
                        public const string html2canvas_js = "~/Scripts/JQuery/Feedback/html2canvas.js"; 
                    }
                }
                public static partial class FullCalendar 
                {
                    public static class Assets
                    {
                        public const string fa_js = "~/Scripts/JQuery/FullCalendar/fa.js"; 
                        public const string fullcalendar_js = "~/Scripts/JQuery/FullCalendar/fullcalendar.js"; 
                        public const string fullcalendar_min_js = "~/Scripts/JQuery/FullCalendar/fullcalendar.min.js"; 
                        public const string moment_min_js = "~/Scripts/JQuery/FullCalendar/moment.min.js"; 
                    }
                }
                public static partial class InputMask 
                {
                    public static class Assets
                    {
                        public const string input_mask_min_js = "~/Scripts/JQuery/InputMask/input-mask.min.js"; 
                    }
                }
                public static partial class LightGallery 
                {
                    public static class Assets
                    {
                        public const string lightGallery_min_js = "~/Scripts/JQuery/LightGallery/lightGallery.min.js"; 
                    }
                }
                public static partial class Loadingbar 
                {
                    public static class Assets
                    {
                        public const string Loadingbar_js = "~/Scripts/JQuery/Loadingbar/Loadingbar.js"; 
                    }
                }
                public static partial class Maps 
                {
                    public static partial class _1_0_0_51205 
                    {
                        public static class Assets
                        {
                            public const string gsa_js = "~/Scripts/JQuery/Maps/1.0.0.51205/gsa.js"; 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class NiceScroll 
                {
                    public static class Assets
                    {
                        public const string jquery_nicescroll_min_js = "~/Scripts/JQuery/NiceScroll/jquery.nicescroll.min.js"; 
                    }
                }
                public static partial class NProgressbar 
                {
                    public static class Assets
                    {
                        public const string nprogress_js = "~/Scripts/JQuery/NProgressbar/nprogress.js"; 
                    }
                }
                public static partial class PasswordStrongly 
                {
                    public static class Assets
                    {
                        public const string PasswordStrongly_js = "~/Scripts/JQuery/PasswordStrongly/PasswordStrongly.js"; 
                    }
                }
                public static partial class PersianCalendar 
                {
                    public static class Assets
                    {
                        public const string PersianCalendar_js = "~/Scripts/JQuery/PersianCalendar/PersianCalendar.js"; 
                    }
                }
                public static partial class Phoenix 
                {
                    public static class Assets
                    {
                        public const string Phoenix_core_js = "~/Scripts/JQuery/Phoenix/Phoenix.core.js"; 
                    }
                }
                public static partial class Select 
                {
                    public static class Assets
                    {
                        public const string BootstrapSelect_js = "~/Scripts/JQuery/Select/BootstrapSelect.js"; 
                    }
                }
                public static partial class SparkLine 
                {
                    public static class Assets
                    {
                        public const string jquery_sparkline_min_js = "~/Scripts/JQuery/SparkLine/jquery.sparkline.min.js"; 
                    }
                }
                public static partial class Sweet 
                {
                    public static class Assets
                    {
                        public const string sweet_alert_min_js = "~/Scripts/JQuery/Sweet/sweet-alert.min.js"; 
                    }
                }
                public static partial class Type 
                {
                    public static class Assets
                    {
                        public const string jQuery_Type_js = "~/Scripts/JQuery/Type/jQuery.Type.js"; 
                    }
                }
                public static partial class Validation 
                {
                    public static class Assets
                    {
                        public const string jquery_validate_js = "~/Scripts/JQuery/Validation/jquery.validate.js"; 
                        public const string jquery_validate_unobtrusive_js = "~/Scripts/JQuery/Validation/jquery.validate.unobtrusive.js"; 
                        public const string jquery_validation_messages_js = "~/Scripts/JQuery/Validation/jquery.validation.messages.js"; 
                    }
                }
                public static partial class Wave 
                {
                    public static class Assets
                    {
                        public const string waves_min_js = "~/Scripts/JQuery/Wave/waves.min.js"; 
                    }
                }
                public static class Assets
                {
                    public const string jquery_1_10_2_min_js = "~/Scripts/JQuery/jquery-1.10.2.min.js"; 
                }
            }
            public static class Assets
            {
                public const string functions_js = "~/Scripts/functions.js"; 
                public const string jquery_signalR_2_1_2_js = "~/Scripts/jquery.signalR-2.1.2.js"; 
                public const string jquery_signalR_2_1_2_min_js = "~/Scripts/jquery.signalR-2.1.2.min.js"; 
                public const string jquery_signalR_2_2_0_js = "~/Scripts/jquery.signalR-2.2.0.js"; 
                public const string jquery_signalR_2_2_0_min_js = "~/Scripts/jquery.signalR-2.2.0.min.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class Images 
            {
                public static partial class Avatar 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class Background 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class Course 
                {
                    public static partial class LogoTypes 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class FileType 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class Icon 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class Logo 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class Map 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class Menu 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class Other 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class Styles 
            {
                public static partial class Ltr 
                {
                    public static class Assets
                    {
                        public const string AppStyle1_css = "~/Content/Styles/Ltr/AppStyle1.css";
                        public const string AppStyle2_css = "~/Content/Styles/Ltr/AppStyle2.css";
                    }
                }
                public static partial class Public 
                {
                    public static class Assets
                    {
                        public const string Animate_css = "~/Content/Styles/Public/Animate.css";
                        public const string Bootgrid_css = "~/Content/Styles/Public/Bootgrid.css";
                        public const string BootstrapSelect_css = "~/Content/Styles/Public/BootstrapSelect.css";
                        public const string Feedback_rtl_css = "~/Content/Styles/Public/Feedback.rtl.css";
                        public const string Fullcalendar_css = "~/Content/Styles/Public/Fullcalendar.css";
                        public const string LightGallery_css = "~/Content/Styles/Public/LightGallery.css";
                        public const string LoadingBar_css = "~/Content/Styles/Public/LoadingBar.css";
                        public const string MapStyle_css = "~/Content/Styles/Public/MapStyle.css";
                        public const string MaterialDesignIconicFont_css = "~/Content/Styles/Public/MaterialDesignIconicFont.css";
                        public const string NProgress_css = "~/Content/Styles/Public/NProgress.css";
                        public const string PersianCalendar_css = "~/Content/Styles/Public/PersianCalendar.css";
                        public const string Sweet_css = "~/Content/Styles/Public/Sweet.css";
                    }
                }
                public static partial class Rtl 
                {
                    public static class Assets
                    {
                        public const string AppStyle1_css = "~/Content/Styles/Rtl/AppStyle1.css";
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


